rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reusable function to check user authentication
    function isUserAuthenticated(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rule for user-specific data under artifacts (main app structure)
    match /artifacts/{appId}/users/{userId}/{document=**} {
      allow read, write: if isUserAuthenticated(userId);
    }

    // Rule for salaryPayments data (manufacturing structure)
    match /salaryPayments/{appId}/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Rule for user root document
    match /users/{userId} {
      allow read, write: if isUserAuthenticated(userId);
    }

    // Rule for user bill layout documents
    match /users/{userId}/billLayouts/{layoutId} {
      allow read, write: if isUserAuthenticated(userId);
    }

    // Rule to allow read access to all user documents (e.g., during duplicate check)
    match /users/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }

    // Allow access to todos collection (for dashboard)
    match /todos/{document} {
      allow read, write: if request.auth != null;
    }

    // Allow authenticated users to access any collection (for development)
    // This is more permissive but allows the app to work properly
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}